name: Deploy to Prod
on:
  push:
    tags:
    - '*'

jobs:
  mac_build:
    name: Build on Mac
    runs-on: macos-10.15
    steps:
      - name: Checkout Actions
        uses: actions/checkout@master

      - name: Install libressl
        run: brew install libressl

      - name: Build app
        run: |
          swift package resolve
          swift package clean
          swift build

  linux_tests:
    needs: mac_build
    name: Run Linux Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@master

      - name: Run tests
        run: ./swift-test-linux.sh

  mac_tests:
    needs: mac_build
    name: Run Mac Tests
    runs-on: macos-10.15
    steps:
      - name: Checkout Actions
        uses: actions/checkout@master

      - name: Install libressl
        run: brew install libressl

      - name: Run tests
        run: |
          swift package resolve
          swift package clean
          swift test

  build_container:
    needs: [mac_tests, linux_tests]
    name: Build Docker container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@master

      - name: install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
       
      - name: Build container image with new release tag
        uses: docker/build-push-action@v1
        with:
          username: dokun1
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: dokun1/afterparty-server
          tag_with_ref: true
          build_args: env=docker

  deploy:
    needs: build_container
    name: Deploy to Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@master

      - name: Display the release tag
        run: |
          echo $GITHUB_REF
          fullRef=$GITHUB_REF
          IFS='/' read -a refs <<< "${fullRef}"
          echo ${refs[2]}
          echo "::set-env name=release_tag::${refs[2]}"

      - name: Update tag name
        run: echo $release_tag > $GITHUB_WORKSPACE/_meta

      - name: Update deployment file
        run: ./update-prod-version.sh $release_tag

      - name: install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DO kubeconfig
        run: doctl kubernetes cluster kubeconfig save afterparty-cluster
     
      - name: Deploy to DO Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/kube/afterparty-deployment.yaml
     
      - name: Verify deployment
        run: kubectl rollout status deployment/afterparty